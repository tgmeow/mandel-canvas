// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mandel.proto

package mandel

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MandelPixel struct {
	NumIter              uint32   `protobuf:"varint,1,opt,name=num_iter,json=numIter,proto3" json:"num_iter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MandelPixel) Reset()         { *m = MandelPixel{} }
func (m *MandelPixel) String() string { return proto.CompactTextString(m) }
func (*MandelPixel) ProtoMessage()    {}
func (*MandelPixel) Descriptor() ([]byte, []int) {
	return fileDescriptor_mandel_eb0fc4a50f4e3ad3, []int{0}
}
func (m *MandelPixel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MandelPixel.Unmarshal(m, b)
}
func (m *MandelPixel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MandelPixel.Marshal(b, m, deterministic)
}
func (dst *MandelPixel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MandelPixel.Merge(dst, src)
}
func (m *MandelPixel) XXX_Size() int {
	return xxx_messageInfo_MandelPixel.Size(m)
}
func (m *MandelPixel) XXX_DiscardUnknown() {
	xxx_messageInfo_MandelPixel.DiscardUnknown(m)
}

var xxx_messageInfo_MandelPixel proto.InternalMessageInfo

func (m *MandelPixel) GetNumIter() uint32 {
	if m != nil {
		return m.NumIter
	}
	return 0
}

type DoubleRect struct {
	Xmin                 float64  `protobuf:"fixed64,1,opt,name=xmin,proto3" json:"xmin,omitempty"`
	Xmax                 float64  `protobuf:"fixed64,2,opt,name=xmax,proto3" json:"xmax,omitempty"`
	Ymin                 float64  `protobuf:"fixed64,3,opt,name=ymin,proto3" json:"ymin,omitempty"`
	Ymax                 float64  `protobuf:"fixed64,4,opt,name=ymax,proto3" json:"ymax,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DoubleRect) Reset()         { *m = DoubleRect{} }
func (m *DoubleRect) String() string { return proto.CompactTextString(m) }
func (*DoubleRect) ProtoMessage()    {}
func (*DoubleRect) Descriptor() ([]byte, []int) {
	return fileDescriptor_mandel_eb0fc4a50f4e3ad3, []int{1}
}
func (m *DoubleRect) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DoubleRect.Unmarshal(m, b)
}
func (m *DoubleRect) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DoubleRect.Marshal(b, m, deterministic)
}
func (dst *DoubleRect) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DoubleRect.Merge(dst, src)
}
func (m *DoubleRect) XXX_Size() int {
	return xxx_messageInfo_DoubleRect.Size(m)
}
func (m *DoubleRect) XXX_DiscardUnknown() {
	xxx_messageInfo_DoubleRect.DiscardUnknown(m)
}

var xxx_messageInfo_DoubleRect proto.InternalMessageInfo

func (m *DoubleRect) GetXmin() float64 {
	if m != nil {
		return m.Xmin
	}
	return 0
}

func (m *DoubleRect) GetXmax() float64 {
	if m != nil {
		return m.Xmax
	}
	return 0
}

func (m *DoubleRect) GetYmin() float64 {
	if m != nil {
		return m.Ymin
	}
	return 0
}

func (m *DoubleRect) GetYmax() float64 {
	if m != nil {
		return m.Ymax
	}
	return 0
}

type IntRect struct {
	Xmin                 int32    `protobuf:"varint,1,opt,name=xmin,proto3" json:"xmin,omitempty"`
	Xmax                 int32    `protobuf:"varint,2,opt,name=xmax,proto3" json:"xmax,omitempty"`
	Ymin                 int32    `protobuf:"varint,3,opt,name=ymin,proto3" json:"ymin,omitempty"`
	Ymax                 int32    `protobuf:"varint,4,opt,name=ymax,proto3" json:"ymax,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IntRect) Reset()         { *m = IntRect{} }
func (m *IntRect) String() string { return proto.CompactTextString(m) }
func (*IntRect) ProtoMessage()    {}
func (*IntRect) Descriptor() ([]byte, []int) {
	return fileDescriptor_mandel_eb0fc4a50f4e3ad3, []int{2}
}
func (m *IntRect) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IntRect.Unmarshal(m, b)
}
func (m *IntRect) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IntRect.Marshal(b, m, deterministic)
}
func (dst *IntRect) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IntRect.Merge(dst, src)
}
func (m *IntRect) XXX_Size() int {
	return xxx_messageInfo_IntRect.Size(m)
}
func (m *IntRect) XXX_DiscardUnknown() {
	xxx_messageInfo_IntRect.DiscardUnknown(m)
}

var xxx_messageInfo_IntRect proto.InternalMessageInfo

func (m *IntRect) GetXmin() int32 {
	if m != nil {
		return m.Xmin
	}
	return 0
}

func (m *IntRect) GetXmax() int32 {
	if m != nil {
		return m.Xmax
	}
	return 0
}

func (m *IntRect) GetYmin() int32 {
	if m != nil {
		return m.Ymin
	}
	return 0
}

func (m *IntRect) GetYmax() int32 {
	if m != nil {
		return m.Ymax
	}
	return 0
}

// RPC style computation request. Should respond with MandelResponse object.
type MandelRequest struct {
	// coordinates of the mandelbrot viewport
	Cb *DoubleRect `protobuf:"bytes,1,opt,name=cb,proto3" json:"cb,omitempty"`
	// coordinates of the pixels to render relative to the image viewport
	Ib *IntRect `protobuf:"bytes,2,opt,name=ib,proto3" json:"ib,omitempty"`
	// Tells the computation when to stop
	MaxIter uint32 `protobuf:"varint,3,opt,name=max_iter,json=maxIter,proto3" json:"max_iter,omitempty"`
	// Dimensions of the image viewport
	ViewWidth            int32    `protobuf:"varint,6,opt,name=view_width,json=viewWidth,proto3" json:"view_width,omitempty"`
	ViewHeight           int32    `protobuf:"varint,7,opt,name=view_height,json=viewHeight,proto3" json:"view_height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MandelRequest) Reset()         { *m = MandelRequest{} }
func (m *MandelRequest) String() string { return proto.CompactTextString(m) }
func (*MandelRequest) ProtoMessage()    {}
func (*MandelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_mandel_eb0fc4a50f4e3ad3, []int{3}
}
func (m *MandelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MandelRequest.Unmarshal(m, b)
}
func (m *MandelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MandelRequest.Marshal(b, m, deterministic)
}
func (dst *MandelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MandelRequest.Merge(dst, src)
}
func (m *MandelRequest) XXX_Size() int {
	return xxx_messageInfo_MandelRequest.Size(m)
}
func (m *MandelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MandelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MandelRequest proto.InternalMessageInfo

func (m *MandelRequest) GetCb() *DoubleRect {
	if m != nil {
		return m.Cb
	}
	return nil
}

func (m *MandelRequest) GetIb() *IntRect {
	if m != nil {
		return m.Ib
	}
	return nil
}

func (m *MandelRequest) GetMaxIter() uint32 {
	if m != nil {
		return m.MaxIter
	}
	return 0
}

func (m *MandelRequest) GetViewWidth() int32 {
	if m != nil {
		return m.ViewWidth
	}
	return 0
}

func (m *MandelRequest) GetViewHeight() int32 {
	if m != nil {
		return m.ViewHeight
	}
	return 0
}

// RPC style computation response. data should be single array of iters of each pixel in ib.
type MandelResponse struct {
	Ib *IntRect `protobuf:"bytes,1,opt,name=ib,proto3" json:"ib,omitempty"`
	// Pixel data array. In our case it will just contain the number of iterations.
	Data                 []*MandelPixel `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *MandelResponse) Reset()         { *m = MandelResponse{} }
func (m *MandelResponse) String() string { return proto.CompactTextString(m) }
func (*MandelResponse) ProtoMessage()    {}
func (*MandelResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_mandel_eb0fc4a50f4e3ad3, []int{4}
}
func (m *MandelResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MandelResponse.Unmarshal(m, b)
}
func (m *MandelResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MandelResponse.Marshal(b, m, deterministic)
}
func (dst *MandelResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MandelResponse.Merge(dst, src)
}
func (m *MandelResponse) XXX_Size() int {
	return xxx_messageInfo_MandelResponse.Size(m)
}
func (m *MandelResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MandelResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MandelResponse proto.InternalMessageInfo

func (m *MandelResponse) GetIb() *IntRect {
	if m != nil {
		return m.Ib
	}
	return nil
}

func (m *MandelResponse) GetData() []*MandelPixel {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*MandelPixel)(nil), "mandel.MandelPixel")
	proto.RegisterType((*DoubleRect)(nil), "mandel.DoubleRect")
	proto.RegisterType((*IntRect)(nil), "mandel.IntRect")
	proto.RegisterType((*MandelRequest)(nil), "mandel.MandelRequest")
	proto.RegisterType((*MandelResponse)(nil), "mandel.MandelResponse")
}

func init() { proto.RegisterFile("mandel.proto", fileDescriptor_mandel_eb0fc4a50f4e3ad3) }

var fileDescriptor_mandel_eb0fc4a50f4e3ad3 = []byte{
	// 305 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0xb1, 0x4e, 0xf3, 0x30,
	0x14, 0x85, 0x15, 0xb7, 0x69, 0xff, 0xff, 0x86, 0x82, 0x64, 0x96, 0x30, 0xa0, 0x56, 0x59, 0xe8,
	0xd4, 0xa1, 0xbc, 0x02, 0x03, 0x1d, 0x90, 0x90, 0x17, 0x04, 0x42, 0xaa, 0xec, 0xc6, 0x22, 0x96,
	0x62, 0xa7, 0x24, 0x0e, 0x75, 0x9e, 0x8a, 0x57, 0x44, 0xbe, 0x4e, 0x04, 0x12, 0x61, 0x73, 0x3e,
	0x9f, 0x1c, 0x9f, 0x7b, 0x2e, 0x9c, 0x69, 0x6e, 0x72, 0x59, 0x6e, 0x8e, 0x75, 0x65, 0x2b, 0x3a,
	0x0b, 0x5f, 0xd9, 0x1a, 0x92, 0x07, 0x3c, 0x3d, 0x2a, 0x27, 0x4b, 0x7a, 0x05, 0xff, 0x4c, 0xab,
	0xf7, 0xca, 0xca, 0x3a, 0x8d, 0x56, 0xd1, 0x7a, 0xc1, 0xe6, 0xa6, 0xd5, 0x3b, 0x2b, 0xeb, 0xec,
	0x15, 0xe0, 0xae, 0x6a, 0x45, 0x29, 0x99, 0x3c, 0x58, 0x4a, 0x61, 0xea, 0xb4, 0x32, 0x28, 0x8a,
	0x18, 0x9e, 0x03, 0xe3, 0x2e, 0x25, 0x03, 0xe3, 0xce, 0xb3, 0xce, 0xeb, 0x26, 0x81, 0x75, 0xbd,
	0xae, 0xf3, 0xba, 0xe9, 0xc0, 0xb8, 0xcb, 0x9e, 0x61, 0xbe, 0x33, 0xf6, 0x97, 0x75, 0x3c, 0x62,
	0x1d, 0x8f, 0x58, 0xc7, 0x23, 0xd6, 0x71, 0x6f, 0xfd, 0x19, 0xc1, 0x22, 0xcc, 0xc8, 0xe4, 0x7b,
	0x2b, 0x1b, 0x4b, 0x33, 0x20, 0x07, 0x81, 0xfe, 0xc9, 0x96, 0x6e, 0xfa, 0x5e, 0xbe, 0x87, 0x63,
	0xe4, 0x20, 0xe8, 0x12, 0x88, 0x12, 0xf8, 0x5e, 0xb2, 0xbd, 0x18, 0x34, 0x7d, 0x44, 0x46, 0x94,
	0xf0, 0x55, 0x69, 0xee, 0x42, 0x55, 0x93, 0x50, 0x95, 0xe6, 0xce, 0x57, 0x45, 0xaf, 0x01, 0x3e,
	0x94, 0x3c, 0xed, 0x4f, 0x2a, 0xb7, 0x45, 0x3a, 0xc3, 0x2c, 0xff, 0x3d, 0x79, 0xf2, 0x80, 0x2e,
	0x21, 0xc1, 0xeb, 0x42, 0xaa, 0xb7, 0xc2, 0xa6, 0x73, 0xbc, 0xc7, 0x3f, 0xee, 0x91, 0x64, 0x2f,
	0x70, 0x3e, 0x04, 0x6e, 0x8e, 0x95, 0x69, 0x64, 0x9f, 0x26, 0xfa, 0x3b, 0xcd, 0x0d, 0x4c, 0x73,
	0x6e, 0x79, 0x4a, 0x56, 0x93, 0x75, 0xb2, 0xbd, 0x1c, 0x24, 0x3f, 0x76, 0xcb, 0x50, 0x20, 0x66,
	0xb8, 0xff, 0xdb, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc5, 0xc6, 0x39, 0x32, 0x0f, 0x02, 0x00,
	0x00,
}
